generator client {
    provider = "prisma-client-js"
}

// datasource db {
//     provider = "sqlite"
//     url      = "file:./dev.db"
// }

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")

    relationMode = "prisma"
}

model Account {
    id                 String    @id @default(cuid())
    userId             String
    providerType       String
    providerId         String
    providerAccountId  String
    refreshToken       String?
    accessToken        String?
    accessTokenExpires DateTime?
    createdAt          DateTime  @default(now())
    updatedAt          DateTime  @updatedAt
    user               User      @relation(fields: [userId], references: [id])

    @@unique([providerId, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    userId       String
    expires      DateTime
    sessionToken String   @unique
    accessToken  String   @unique
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
    user         User     @relation(fields: [userId], references: [id])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    username      String?   @unique
    password      String?
    bio           String?
    phone         String?
    isPrivate     Boolean   @default(false)

    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    accounts  Account[]
    sessions  Session[]
    Follower  Follower[]
    Following Follower[] @relation("Following")
}

model VerificationRequest {
    id         String   @id @default(cuid())
    identifier String
    token      String   @unique
    expires    DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    @@unique([identifier, token])
}

model Follower {
    id          String          @id @default(cuid())
    userId      String
    followingId String
    status      FollowingStatus @default(PENDING)
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt

    user      User @relation(fields: [userId], references: [id])
    following User @relation("Following", fields: [followingId], references: [id])

    @@unique([userId, followingId])
}

enum FollowingStatus {
    PENDING
    ACCEPTED
}
